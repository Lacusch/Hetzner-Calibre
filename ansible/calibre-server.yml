---
# Ansible playbook to set up Calibre with Podman on Rocky Linux
- name: Configure Calibre using Podman on Rocky Linux
  hosts: calibre_server
  remote_user : root
  become: true
  vars:
    calibre_container_name: calibre
    calibre_image: docker.io/lacusch/calibre-server:0.1
    calibre_data_dir: /opt/calibre/data
    calibre_config_dir: /opt/calibre/config
    calibre_port_webserver: 80
    calibre_books_dir: /opt/calibre/books
    timezone: "Europe/Berlin"

  tasks:
    - name: Install required packages
      dnf:
        name:
          - podman
          - python3-podman
        state: present
        update_cache: yes

    - name: Create calibre directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: root
        group: root
      loop:
        - "{{ calibre_data_dir }}"
        - "{{ calibre_config_dir }}"
        - "{{ calibre_books_dir }}"

    - name: Pull Calibre Docker image
      containers.podman.podman_image:
        name: "{{ calibre_image }}"
        state: present

    - name: Create Calibre container
      containers.podman.podman_container:
        name: "{{ calibre_container_name }}"
        image: "{{ calibre_image }}"
        state: started
        restart_policy: always
        ports:
          - "{{ calibre_port_webserver }}:8080"
        env:
          PUID: "1000"
          PGID: "1000"
          TZ: "{{ timezone }}"
          CLI_ARGS: "--username admin --password admin123" # Optional args for setting up the Calibre content server
        volumes:
          - "{{ calibre_config_dir }}:/config"
          - "{{ calibre_books_dir }}:/books"
          - "{{ calibre_data_dir }}:/data"

    - name: Create systemd service file for Calibre container
      template:
        src: templates/calibre-container.service.j2
        dest: /etc/systemd/system/calibre-container.service
        owner: root
        group: root
        mode: '0644'

    - name: Enable and start Calibre container service
      systemd:
        name: calibre-container.service
        enabled: yes
        state: started
        daemon_reload: yes
